<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 线程池设置 -->
	<!-- spring线程池设置 ，对定时任务开启一个线程池进行控制，其中bean的id为taskExecutor，不能改变，它是SchedulerFactoryBean的一个属性，这样通过set方法就注入进去了 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数，核心线程会一直存活，即使没有任务需要处理 -->
		<property name="corePoolSize" value="20" />
		<!-- 当线程数大于或等于核心线程，且任务队列已满时，线程池会创建新的线程，直到线程数量达到maxPoolSize。如果线程数已等于maxPoolSize，且任务队列queueCapacity已满，则已超出线程池的处理能力，线程池会拒绝处理任务而抛出异常 -->
		<property name="maxPoolSize" value="200" />
		<!-- 线程池所使用的缓冲队列 容量 -->
		<property name="queueCapacity" value="1000" />
		<!-- 当线程空闲时间达到keepAliveTime，该线程会退出，直到线程数量等于corePoolSize。如果allowCoreThreadTimeout设置为true，则所有线程均会退出直到线程数量为0 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 核心线程在allowCoreThreadTimeout默认值为false，被设置为true时，核心线程才会退出;默认为false -->
		<property name="allowCoreThreadTimeOut" value="true" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	
	

</beans> 

   
